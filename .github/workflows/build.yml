name: SonarQube
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and analyze with code coverage
    runs-on: windows-latest
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Cache SonarQube Cloud packages
        uses: actions/cache@v4
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarQube Cloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarQube Cloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Install dotnet-reportgenerator (if needed)
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: dotnet tool install -g dotnet-reportgenerator --tool-path .\.sonar\reportgenerator

      - name: Build with Code Coverage
        env:
          DOTNET_REPORTGENERATOR_VERSION: 4.8.10  # Or latest version
        shell: powershell
        run: |
          cd Exchange
          dotnet build -c Release --no-restore /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura
          dotnet reportgenerator -reports:"Exchange\coverage.cobertura.xml" -targetdir:"Exchange\CoverageReport"

      - name: Analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner dotnet-sonarscanner begin /k:"LuongQuocKhang_Exchange" /o:"exchange" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vstest.reportsPaths="Exchange\TestResults\*.trx" /d:sonar.coverage.reportPaths="Exchange\CoverageReport\Cobertura.xml"
          cd Exchange
          dotnet build
          .\.sonar\scanner dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"